name: Title Replacer
description: Replaces and formats keywords in titles of issues and PRs.
branding:
  icon: feather
  color: yellow
inputs:
  pattern:
    description: "What to search in titles. Comma-separated or line-separated, surrounding spaces are ignored. If it starts with a /, it is treated as a regular expression. (example: fix, bug, feat)"
  pattern-path:
    description: The path to read the patterns from. It can be a file (comma-separated or line-separated) or a directory, where all the file *names* will be used (without the extension)
  replacement:
    description: |
      What to replace the pattern with. Use $0 for the matched pattern, or $1, $2, etc. if you're using a regular expression with groups. (example: '`$0`')

      Note that if you use this action to wrap keywords like '`$0`', you should also use `trim-wrappers: true` or else keywords will be wrapped twice.
    default: ''
  trim-wrappers:
    description: |
      The surrounding characters to trim when replacing the pattern, for example the replacement can drop the quotes in `"hippo"` when the pattern is just hippo.

      Example: '[]{}"'
      Example: 'true' means ()[]{}"'`<>
    default: ''
  uppercase-first-letter:
    description: Whether to uppercase the first letter of the title
    default: true
  dry-run:
    description: 'If true, show what changes would be made without actually making them'
    default: false
  allow-override:
    description: 'If true, reduces frequency at which it tries to apply the replacements, in order to allow the user to set a specific title even if it matches the pattern. This avoids frustrating user/action loops. NOT WORKING YET'
    default: false
  token:
    description: 'The automatically-generated token, set this to \$\{\{ secrets.GITHUB_TOKEN \}\}'
outputs:
  changed:
    description: Whether the title was changed
  title:
    description: The title after the replacements or the original title if unchanged
runs:
  using: node20
  main: distribution/index.js
